package model.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import db.DB;
import db.DBException;
import model.dao.FuncionarioDao;
import model.entities.Departamento;
import model.entities.Funcionario;

public class FuncionarioDaoJDBC implements FuncionarioDao {

	private Connection conexao;

	public FuncionarioDaoJDBC(Connection conexao) {
		this.conexao = conexao;
	}

	@Override
	public void insert(Funcionario funcionario) {

	}

	@Override
	public void update(Funcionario funcionario) {

	}

	@Override
	public void delete(Funcionario funcionario) {

	}

	@Override
	public Funcionario encontrarFuncionarioAtravesDoId(Integer id) {

		PreparedStatement consultaSQL = null;
		ResultSet resultadoSQL = null;
		
		/* Com essa consulta abaixo, consigo pegar as informações de um funcionario com certo ID, 
		 e as informações do departamento dele */ 
		 try {
			 consultaSQL = conexao.prepareStatement(
					"SELECT seller.*,department.Name as DepName " + "FROM seller INNER JOIN department "
							+ "ON seller.DepartmentId = department.Id " + "WHERE seller.Id = ?;");
			 consultaSQL.setInt(1, id);

			 resultadoSQL = consultaSQL.executeQuery();
			 if (resultadoSQL.next()) { // confere se tem algo na próxima linha(que no caso é a primeira) do "resultadoSQL"
				 
				 Departamento departamento = instanciarDepartamento(resultadoSQL);
				
				 Funcionario funcionario = new Funcionario(resultadoSQL.getInt("Id"), resultadoSQL.getString("Name"), 
						resultadoSQL.getString("Email"), resultadoSQL.getDate("BirthDate"), resultadoSQL.getDouble("BaseSalary"), 
						departamento); // instanciando o funcionario
				 return funcionario;
			 }
			 return null;
		}
		 catch (SQLException e) {
			 throw new DBException("Erro ao filtrar funcionário através do ID. " + e.getMessage());
		 }
		 finally {
			DB.closeStatement(consultaSQL);
			DB.closeResultSet(resultadoSQL);
		}
	}

	@Override
	public List<Funcionario> encontrarTodosFuncionarios() {
		return null;
	}

	private Departamento instanciarDepartamento(ResultSet resultadoSQL) throws SQLException {
		
		Departamento departamento = new Departamento(resultadoSQL.getString("DepName"), resultadoSQL.getInt("DepartmentId"));
		//departamento.setNomeDoDepartamento(resultadoSQL.getString("DepName")); 
		//departamento.setIdDoDepartamento(resultadoSQL.getInt("DepartmentId")); // instanciando o departamento com nome e id recebido da consulta  SQL
		return departamento;
	}
	
}
